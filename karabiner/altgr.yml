title: "04. AltGr key"

# DEVECES {{{

# Starndard Keyboard -----------------------------

# Apple Internal Keyoard
# vendor_id: 1452
# product_id: 834

# Nuphy Air60 V2
# vendor_id: 6645
# product_id: 12885

# Lofree Flow84
# vendor_id: 1452
# product_id: 591

# Vega
# vendor_id: 41219
# product_id: 21

# Ergonomic Keyboard -----------------------------

# Ergo42
# vendor_id: 48194
# product_id: 66

# Lain
# vendor_id:
# product_id:

# Altair-X
# vendor_id:
# product_id:

# }}}

# ALIASES {{{

aliases:

# Modifier Keys ----------------------------------

- from/modifiers: &modifier
    mandatory:
    - right_shift
    optional:
    - any

# Conditions -------------------------------------

- conditions: &devices
  - type: device_if
    identifiers:
    - description: "Apple Internal Keyoard"
      vendor_id: 1452
      product_id: 834
    - description: "Lofree Flow84"
      vendor_id: 1452
      product_id: 591

# - conditions: &devices
#   - type: device_unless
#     identifiers:
#     - description: "Ergo42"
#       vendor_id: 48194
#       product_id: 66
#     - description: "Vega"
#       vendor_id: 41219
#       product_id: 21

# }}}

# RULES ==========================================

rules:
- description: "4. AltGr key"
  manipulators:

# AltGr Key {{{

  # IME Off (Qwerty)
  - type: basic
    from:
      key_code: right_shift
      modifiers:
        optional:
        - any
    to:
    - key_code: right_shift
      lazy: true
    to_if_alone:
    - key_code: slash
    conditions:
    - type: input_source_unless
      input_sources:
      - language: ja

  # IME On (Shingeta)
  - type: basic
    from:
      key_code: right_shift
      modifiers:
        optional:
        - any
    to:
    - key_code: right_shift
      lazy: true
    to_if_alone:
    - key_code: b
    - key_code: u
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# Upper Row {{{

  # Q -> .
  - type: basic
    from:
      key_code: q
      modifiers: *modifier
    to:
    - key_code: period
    conditions: *devices

  # W -> +
  - type: basic
    from:
      key_code: w
      modifiers: *modifier
    to:
    - key_code: equal_sign
      modifiers:
      - shift
    conditions: *devices

  # E -> _
  - type: basic
    from:
      key_code: e
      modifiers: *modifier
    to:
    - key_code: hyphen
      modifiers:
      - shift
    conditions: *devices

  # R -> !
  - type: basic
    from:
      key_code: r
      modifiers: *modifier
    to:
    - key_code: "1"
      modifiers:
      - shift
    conditions: *devices

  # T -> |
  - type: basic
    from:
      key_code: t
      modifiers: *modifier
    to:
    - key_code: backslash
      modifiers:
      - shift
    conditions: *devices

  # Y -> `
  - type: basic
    from:
      key_code: "y"
      modifiers: *modifier
    to:
    - key_code: grave_accent_and_tilde
    conditions: *devices

  # U -> ?
  - type: basic
    from:
      key_code: u
      modifiers: *modifier
    to:
    - key_code: slash
      modifiers:
      - shift
    conditions: *devices

  # I -> ^
  - type: basic
    from:
      key_code: i
      modifiers: *modifier
    to:
    - key_code: "6"
      modifiers:
      - shift
    conditions: *devices

  # O -> $
  - type: basic
    from:
      key_code: o
      modifiers: *modifier
    to:
    - key_code: "4"
      modifiers:
      - shift
    conditions: *devices

  # P -> ,
  - type: basic
    from:
      key_code: p
      modifiers: *modifier
    to:
    - key_code: comma
    conditions: *devices

  # # Open Bracket -> [
  # - type: basic
  #   from:
  #     key_code: open_bracket
  #     modifiers: *modifier
  #   to:
  #   - key_code: open_bracket
  #   conditions: *devices

  # # Close Bracket -> ]
  # - type: basic
  #   from:
  #     key_code: close_bracket
  #     modifiers: *modifier
  #   to:
  #   - key_code: close_bracket
  #   conditions: *devices

  # # Backslash -> \
  # - type: basic
  #   from:
  #     key_code: backslash
  #     modifiers: *modifier
  #   to:
  #   - key_code: backslash
  #   conditions: *devices

# }}}

# Home Row {{{

  # A -> *
  - type: basic
    from:
      key_code: a
      modifiers: *modifier
    to:
    - key_code: "8"
      modifiers:
      - shift
    conditions: *devices

  # S -> =
  - type: basic
    from:
      key_code: s
      modifiers: *modifier
    to:
    - key_code: equal_sign
    conditions: *devices

  # D -> -
  - type: basic
    from:
      key_code: d
      modifiers: *modifier
    to:
    - key_code: hyphen
    conditions: *devices

  # F -> 0
  - type: basic
    from:
      key_code: f
      modifiers: *modifier
    to:
    - key_code: "0"
    conditions: *devices

  # G -> @
  - type: basic
    from:
      key_code: g
      modifiers: *modifier
    to:
    - key_code: "2"
      modifiers:
      - shift
    conditions: *devices

  # H -> &
  - type: basic
    from:
      key_code: h
      modifiers: *modifier
    to:
    - key_code: "7"
      modifiers:
      - shift
    conditions: *devices

  # J -> 1
  - type: basic
    from:
      key_code: j
      modifiers: *modifier
    to:
    - key_code: "1"
    conditions: *devices

  # K -> %
  - type: basic
    from:
      key_code: k
      modifiers: *modifier
    to:
    - key_code: "5"
      modifiers:
      - shift
    conditions: *devices

  # L -> #
  - type: basic
    from:
      key_code: l
      modifiers: *modifier
    to:
    - key_code: "3"
      modifiers:
      - shift
    conditions: *devices

  # Semicolon -> :
  - type: basic
    from:
      key_code: semicolon
      modifiers: *modifier
    to:
    - key_code: semicolon
      modifiers:
      - shift
    conditions: *devices

  # # Quote -> '
  # - type: basic
  #   from:
  #     key_code: quote
  #     modifiers: *modifier
  #   to:
  #   - key_code: quote
  #   conditions: *devices

# }}}

# Lower Row {{{

  # Z -> 8
  - type: basic
    from:
      key_code: z
      modifiers: *modifier
    to:
    - key_code: "8"
    conditions: *devices

  # X -> 6
  - type: basic
    from:
      key_code: x
      modifiers: *modifier
    to:
    - key_code: "6"
    conditions: *devices

  # C -> 4
  - type: basic
    from:
      key_code: c
      modifiers: *modifier
    to:
    - key_code: "4"
    conditions: *devices

  # V -> 2
  - type: basic
    from:
      key_code: v
      modifiers: *modifier
    to:
    - key_code: "2"
    conditions: *devices

  # B -> \
  - type: basic
    from:
      key_code: b
      modifiers: *modifier
    to:
    - key_code: backslash
    conditions: *devices

  # N -> ~
  - type: basic
    from:
      key_code: "n"
      modifiers: *modifier
    to:
    - key_code: grave_accent_and_tilde
      modifiers:
      - shift
    conditions: *devices

  # M -> 3
  - type: basic
    from:
      key_code: m
      modifiers: *modifier
    to:
    - key_code: "3"
    conditions: *devices

  # Comma -> 5
  - type: basic
    from:
      key_code: comma
      modifiers: *modifier
    to:
    - key_code: "5"
    conditions: *devices

  # Period -> 7
  - type: basic
    from:
      key_code: period
      modifiers: *modifier
    to:
    - key_code: "7"
    conditions: *devices

  # Slash -> 9
  - type: basic
    from:
      key_code: slash
      modifiers: *modifier
    to:
    - key_code: "9"
    conditions: *devices

# }}}

# Other Keys {{{

  # RCommand -> 9
  - type: basic
    from:
      key_code: right_command
      modifiers: *modifier
    to:
    - key_code: "9"
    conditions: *devices

  # # Space -> Whitespace
  # - type: basic
  #   from:
  #     key_code: spacebar
  #     modifiers: *modifier
  #   to:
  #   - key_code: spacebar
  #     repeat: false
  #   conditions: *devices

# }}}
