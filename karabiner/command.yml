title: "05. Command key"
rules:
- description: "5. Command key"
  manipulators:

  # LCommand-Any {{{

  # LCommand-Space -> Return
  - type: basic
    from:
      key_code: spacebar
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: return_or_enter
      repeat: false

  # LCommand-RCommand -> ESC
  - type: basic
    from:
      key_code: right_command
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: escape
      repeat: false

  # RCommand-LCommand -> ESC
  - type: basic
    from:
      key_code: left_command
      modifiers:
        mandatory:
        - right_command
    to:
    - key_code: escape
      repeat: false

  # LCommand-; -> Command-K
  - type: basic
    from:
      key_code: semicolon
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: k
      modifiers:
      - command
      repeat: false

  # LCommand-U -> Command-H
  - type: basic
    from:
      key_code: u
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: h
      modifiers:
      - command
      repeat: false

  # }}}

  # LCommand-HJKL -> Arrow Keys {{{

  # LCommand-H -> Left
  - type: basic
    from:
      key_code: h
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: left_arrow

  # LCommand-J -> Down
  - type: basic
    from:
      key_code: j
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: down_arrow

  # LCommand-K -> Up
  - type: basic
    from:
      key_code: k
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: up_arrow

  # LCommand-L -> Right
  - type: basic
    from:
      key_code: l
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: right_arrow

  # }}}

  # LCommand-NM -> Delete, Delete Forward {{{

  # LCommand-N -> Delete
  - type: basic
    from:
      key_code: "n"
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: delete_or_backspace

  # LCommand-M -> Control-D
  # AquaSKK が Delete Forward のキーコードを受け付けないため、
  # 基本は Control-D、端末でのみ Vim 対応のために Delete Forward にする
  - type: basic
    from:
      key_code: m
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: d
      modifiers:
      - control
    conditions:
    - type: frontmost_application_unless
      bundle_identifiers:
      - "net.kovidgoyal.kitty"

  # LCommand-M -> Delete Forward
  - type: basic
    from:
      key_code: m
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: delete_forward

  # }}}

  # LCommand-,. -> Control-AE {{{

  # LCommand-, -> Control-A
  - type: basic
    from:
      key_code: comma
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: a
      modifiers:
      - control
      repeat: false

  # LCommand-. -> Control-E
  - type: basic
    from:
      key_code: period
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: e
      modifiers:
      - control
      repeat: false

  # }}}

  # Home Row Mods {{{

  # Command-D/K -> Command-Shift (if Home Row Mods is on)
  - type: basic
    from:
      key_code: d
      modifiers:
        mandatory:
        - left_command
        - left_control
    to:
    - key_code: left_shift
      modifiers:
      - command
      - control
    to_if_alone:
    - key_code: d
      modifiers:
      - command
      - control

  - type: basic
    from:
      key_code: k
      modifiers:
        mandatory:
        - right_command
        - left_control
    to:
    - key_code: left_shift
      modifiers:
      - command
      - control
    to_if_alone:
    - key_code: k
      modifiers:
      - command
      - control

  # Command-S/L -> Command-Control (if Home Row Mods is on)
  - type: basic
    from:
      key_code: s
      modifiers:
        mandatory:
        - left_command
        - left_shift
    to:
    - key_code: left_control
      modifiers:
      - command
      - shift
    to_if_alone:
    - key_code: s
      modifiers:
      - command
      - shift

  - type: basic
    from:
      key_code: l
      modifiers:
        mandatory:
        - right_command
        - left_shift
    to:
    - key_code: left_control
      modifiers:
      - command
      - shift
    to_if_alone:
    - key_code: l
      modifiers:
      - command
      - shift

  # Command-D/K -> Command-Shift
  - type: basic
    from:
      key_code: d
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: left_shift
      modifiers:
      - command
    to_if_alone:
    - key_code: d
      modifiers:
      - command

  - type: basic
    from:
      key_code: k
      modifiers:
        mandatory:
        - right_command
    to:
    - key_code: left_shift
      modifiers:
      - command
    to_if_alone:
    - key_code: k
      modifiers:
      - command

  # Command-S/L -> Command-Control
  - type: basic
    from:
      key_code: s
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: left_control
      modifiers:
      - command
    to_if_alone:
    - key_code: s
      modifiers:
      - command

  - type: basic
    from:
      key_code: l
      modifiers:
        mandatory:
        - right_command
    to:
    - key_code: left_control
      modifiers:
      - command
    to_if_alone:
    - key_code: l
      modifiers:
      - command

  # }}}

  # Command Keys {{{

  # LCommand -> Eisuu/LCommand
  - type: basic
    from:
      key_code: left_command
    to:
    - key_code: left_command
      lazy: true
    to_if_alone:
    - key_code: japanese_eisuu

  # RCommand -> Kana/RCommand
  - type: basic
    from:
      key_code: right_command
    to:
    - key_code: right_command
      lazy: true
    to_if_alone:
    - key_code: japanese_kana

  # }}}
