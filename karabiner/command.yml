title: "05. Command key"
rules:
- description: "5. Command key"
  manipulators:

  # LCommand-Any {{{

  # LCommand-Space -> Return
  - type: basic
    from:
      key_code: spacebar
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: return_or_enter
      repeat: false

  # LCommand-RCommand -> ESC
  - type: basic
    from:
      key_code: right_command
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: escape
      repeat: false

  # RCommand-LCommand -> ESC
  - type: basic
    from:
      key_code: left_command
      modifiers:
        mandatory:
        - right_command
        optional:
        - any
    to:
    - key_code: escape
      repeat: false

  # LCommand-; -> Command-K
  - type: basic
    from:
      key_code: semicolon
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: k
      modifiers:
      - command
      repeat: false

  # LCommand-' -> Command-H
  - type: basic
    from:
      key_code: quote
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: h
      modifiers:
      - command
      repeat: false

  # LCommand-U -> Command-H
  - type: basic
    from:
      key_code: u
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: h
      modifiers:
      - command
      repeat: false

  # # LCommand-M -> Command-H
  # - type: basic
  #   from:
  #     key_code: m
  #     modifiers:
  #       mandatory:
  #       - left_command
  #       optional:
  #       - any
  #   to:
  #   - key_code: h
  #     modifiers:
  #     - command
  #     repeat: false

  # }}}

  # LCommand-HJKL -> Arrow Keys {{{

  # LCommand-H -> Left
  - type: basic
    from:
      key_code: h
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: left_arrow

  # LCommand-J -> Down
  - type: basic
    from:
      key_code: j
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: down_arrow

  # LCommand-K -> Up
  - type: basic
    from:
      key_code: k
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: up_arrow

  # LCommand-L -> Right
  - type: basic
    from:
      key_code: l
      modifiers:
        mandatory:
        - left_command
        optional:
        - any
    to:
    - key_code: right_arrow

  # }}}

  # LCommand-NM -> Delete, Delete Forward {{{

  # LCommand-N -> Delete
  - type: basic
    from:
      key_code: "n"
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: delete_or_backspace

  # LCommand-M -> Delete Forward
  - type: basic
    from:
      key_code: m
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: delete_forward

  # }}}

  # LCommand-IO -> Kana, Eisuu {{{

  # LCommand-I -> Kana
  - type: basic
    from:
      key_code: i
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: japanese_kana

  # LCommand-O -> Eisuu
  - type: basic
    from:
      key_code: o
      modifiers:
        mandatory:
        - left_command
    to:
    - key_code: japanese_eisuu

  # }}}

  # Command Keys {{{

  # LCommand -> Eisuu/LCommand
  - type: basic
    from:
      key_code: left_command
      modifiers:
        optional:
        - any
    to:
    - key_code: left_command
      lazy: true
    to_if_alone:
    - key_code: japanese_eisuu

  # RCommand -> Kana/RCommand
  - type: basic
    from:
      key_code: right_command
      modifiers:
        optional:
        - any
    to:
    - key_code: right_command
      lazy: true
    to_if_alone:
    - key_code: japanese_kana

  # }}}
