title: "02. Simultaneous"

# ALIASES ========================================

aliases:

- parameters: &short_threshold_ms
    basic.simultaneous_threshold_milliseconds: 20

# RULES ==========================================

rules:
- description: "2. Simultaneous"
  manipulators:

# 両手 {{{

  # 常時 -----------------------------------------

  # VM -> Return
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: m
    to:
    - key_code: return_or_enter
      repeat: false

  # VN -> Return (代替)
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: "n"
    to:
    - key_code: return_or_enter
      repeat: false

  # CM -> Return (代替)
  - type: basic
    from:
      simultaneous:
      - key_code: c
      - key_code: m
    to:
    - key_code: return_or_enter
      repeat: false

  # # RU ->
  # - type: basic
  #   from:
  #     simultaneous:
  #     - key_code: r
  #     - key_code: u
  #   to:
  #   - key_code:
  #     repeat: false

  # 英語入力 -------------------------------------

  # FJ -> Kana, Ctrl-;
  # macSKK: かなカナモード切り替え, 入力中のかなカナ切り替え
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: j
    to:
    - key_code: japanese_kana
    - key_code: semicolon
      modifiers:
      - control
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # FJ -> Ctrl-;
  # macSKK: かなカナモード切り替え, 入力中のかなカナ切り替え
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: j
    to:
    - key_code: semicolon
      modifiers:
      - control
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 片手・横 {{{

  # 常時 -----------------------------------------

  # FG -> [], Left Arrow
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: g
    to:
    - key_code: open_bracket
    - key_code: close_bracket
    - key_code: left_arrow
      repeat: false

  # HJ -> (), Left Arrow
  - type: basic
    from:
      simultaneous:
      - key_code: h
      - key_code: j
    to:
    - key_code: "9"
      modifiers:
      - shift
    - key_code: "0"
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false

  # DF -> Eisuu
  - type: basic
    from:
      simultaneous:
      - key_code: d
      - key_code: f
    to:
    - key_code: japanese_eisuu
      repeat: false
    parameters: *short_threshold_ms

  # JK -> Kana
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: k
    to:
    - key_code: japanese_kana
      repeat: false
    parameters: *short_threshold_ms

  # RT -> [], Space (英語入力)
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: t
    to:
    - key_code: open_bracket
    - key_code: close_bracket
    - key_code: spacebar
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

    # RT -> Eisuu, [], Space, Kana (日本語入力)
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: t
    to:
    - key_code: japanese_eisuu
    - key_code: open_bracket
    - key_code: close_bracket
    - key_code: spacebar
    - key_code: japanese_kana
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # # WE -> Esc
  # # 編集モードが担当するため、ここでは定義しない
  # - type: basic
  #   from:
  #     simultaneous:
  #     - key_code: w
  #     - key_code: e
  #     modifiers:
  #       optional:
  #       - any
  #   to:
  #   - key_code: escape
  #     repeat: false
  #   parameters: *short_threshold_ms
  #
  # # IO -> Tab
  # # 編輯モードが担当するため、ここでは定義しない
  # - type: basic
  #   from:
  #     simultaneous:
  #     - key_code: i
  #     - key_code: o
  #     modifiers:
  #       optional:
  #       - any
  #   to:
  #   - key_code: tab
  #     repeat: false
  #   parameters: *short_threshold_ms

# }}}

# 片手・斜め {{{

  # 英語入力 -------------------------------------

  # RG -> ;
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: g
    to:
    - key_code: semicolon
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # UH -> /
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: h
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # FB -> :
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: b
    to:
    - key_code: semicolon
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # JN -> ?
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: "n"
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # RG -> ・
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: g
    to:
    - key_code: quote
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # UH -> ／
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: h
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # FB -> ！
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: b
    to:
    - key_code: "1"
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # JN -> ？
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: "n"
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 片手・斜め（代替） {{{

  # 英語入力 -------------------------------------

  # RF -> ;
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: f
    to:
    - key_code: semicolon
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # UJ -> /
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: j
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # FV -> :
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: v
    to:
    - key_code: semicolon
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # JM -> ?
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: m
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # RF -> ・
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: f
    to:
    - key_code: quote
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # UJ -> ／
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: j
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # FV -> ！
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: v
    to:
    - key_code: "1"
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # JM -> ？
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: m
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 特殊 {{{

  # Space + Return -> Control-Return
  - type: basic
    from:
      simultaneous:
      - key_code: spacebar
      - key_code: return_or_enter
    to:
    - key_code: spacebar
      modifiers:
      - control
      repeat: false

# }}}
