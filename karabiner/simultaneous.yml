title: "02. Simultaneous"
rules:
- description: "2. Simultaneous"
  manipulators:

# 両手 {{{

  # 常時 -----------------------------------------

  # RU -> Raycast Hotkey
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: u
    to:
    - key_code: spacebar
      modifiers:
      - control
      repeat: false

  # VM -> Return
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: m
    to:
    - key_code: return_or_enter
      repeat: false

  # CM -> Return (alt)
  - type: basic
    from:
      simultaneous:
      - key_code: c
      - key_code: m
    to:
    - key_code: return_or_enter
      repeat: false

  # BN -> Command-Return (New Row in Bike)
  - type: basic
    from:
      simultaneous:
      - key_code: b
      - key_code: "n"
    to:
    - key_code: return_or_enter
      modifiers:
      - command
      repeat: false

  # 日本語入力 -----------------------------------

  # FJ -> ToggleKana in AquaSKK
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: j
    to:
    - key_code: semicolon
      modifiers:
      - control
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # GH -> StickyKey in AquaSKK
  - type: basic
    from:
      simultaneous:
      - key_code: g
      - key_code: h
    to:
    - key_code: comma
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # A; -> StickyKey in AquaSKK
  - type: basic
    from:
      simultaneous:
      - key_code: a
      - key_code: semicolon
    to:
    - key_code: comma
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 片手・横 {{{

  # 常時 -----------------------------------------

  # FG -> []
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: g
    to:
    - key_code: open_bracket
    - key_code: close_bracket
    - key_code: left_arrow
      repeat: false

  # HJ -> ()
  - type: basic
    from:
      simultaneous:
      - key_code: h
      - key_code: j
    to:
    - key_code: "9"
      modifiers:
      - shift
    - key_code: "0"
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false

  # WE -> Esc
  - type: basic
    from:
      simultaneous:
      - key_code: w
      - key_code: e
      modifiers:
        optional:
        - any
    to:
    - key_code: escape
      repeat: false

  # IO -> Tab
  - type: basic
    from:
      simultaneous:
      - key_code: i
      - key_code: o
      modifiers:
        optional:
        - any
    to:
    - key_code: tab
      repeat: false

  # DF -> Eisuu
  - type: basic
    from:
      simultaneous:
      - key_code: d
      - key_code: f
    to:
    - key_code: japanese_eisuu
      repeat: false

  # JK -> Kana
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: k
    to:
    - key_code: japanese_kana
      repeat: false

  # 英語入力 -------------------------------------

  # VB -> {}
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: b
    to:
    - key_code: open_bracket
      modifiers:
      - shift
    - key_code: close_bracket
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # NM -> ""
  - type: basic
    from:
      simultaneous:
      - key_code: "n"
      - key_code: m
    to:
    - key_code: quote
      modifiers:
      - shift
    - key_code: quote
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # RT -> ''
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: t
    to:
    - key_code: quote
    - key_code: quote
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # YU -> ''
  - type: basic
    from:
      simultaneous:
      - key_code: "y"
      - key_code: u
    to:
    - key_code: quote
    - key_code: quote
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # VB -> 『』
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: b
    to:
    - key_code: open_bracket
      modifiers:
      - shift
    - key_code: close_bracket
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # NM -> 【】
  - type: basic
    from:
      simultaneous:
      - key_code: "n"
      - key_code: m
    to:
    - key_code: backslash
    - key_code: open_bracket
      modifiers:
      - shift
    - key_code: backslash
    - key_code: close_bracket
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # RT -> 〈〉
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: t
    to:
    - key_code: backslash
    - key_code: open_bracket
    - key_code: backslash
    - key_code: close_bracket
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # YU -> 〈〉
  - type: basic
    from:
      simultaneous:
      - key_code: "y"
      - key_code: u
    to:
    - key_code: backslash
    - key_code: open_bracket
    - key_code: backslash
    - key_code: close_bracket
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 片手・斜め {{{

  # 英語入力 -------------------------------------

  # RG -> ;
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: g
    to:
    - key_code: semicolon
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # UH -> /
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: h
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # FB -> :
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: b
    to:
    - key_code: semicolon
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # JN -> ?
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: "n"
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # RG -> ・
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: g
    to:
    - key_code: quote
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # UH -> ／
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: h
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # FB -> ！
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: b
    to:
    - key_code: "1"
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # JN -> ？
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: "n"
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 片手・斜め（代替） {{{

  # 英語入力 -------------------------------------

  # RF -> ;
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: f
    to:
    - key_code: semicolon
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # UJ -> /
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: j
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # FV -> :
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: v
    to:
    - key_code: semicolon
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # JM -> ?
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: m
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # RF -> ・
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: f
    to:
    - key_code: quote
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # UJ -> ／
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: j
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # FV -> ！
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: v
    to:
    - key_code: "1"
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # JM -> ？
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: m
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 特殊 {{{

  # Space + Return -> Control-Return
  - type: basic
    from:
      simultaneous:
      - key_code: spacebar
      - key_code: return_or_enter
    to:
    - key_code: spacebar
      modifiers:
      - control
      repeat: false

  # SD + J/L -> Kana/Eisuu
  - type: basic
    from:
      simultaneous:
      - key_code: s
      - key_code: d
      - key_code: j
    to:
    - key_code: japanese_kana
      repeat: false

  - type: basic
    from:
      simultaneous:
      - key_code: s
      - key_code: d
      - key_code: l
    to:
    - key_code: japanese_eisuu
      repeat: false

# }}}
