title: "02. Simultaneous"
rules:
- description: "2. Simultaneous"
  manipulators:

# 両手 {{{

  # 常時 -----------------------------------------

  # VM -> Return
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: m
    to:
    - key_code: return_or_enter
      repeat: false

  # A; -> Sticky Shift
  - type: basic
    from:
      simultaneous:
      - key_code: a
      - key_code: semicolon
    to:
    - sticky_modifier:
        left_shift: toggle

  # 日本語入力 -----------------------------------

  # FJ -> ToggleKana in AquaSKK
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: j
    to:
    - key_code: semicolon
      modifiers:
      - control
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 片手・横 {{{

  # 常時 -----------------------------------------

  # FG -> []
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: g
    to:
    - key_code: open_bracket
    - key_code: close_bracket
    - key_code: left_arrow
      repeat: false

  # JH -> ()
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: h
    to:
    - key_code: "9"
      modifiers:
      - shift
    - key_code: "0"
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false

  # RT -> {}
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: t
    to:
    - key_code: open_bracket
      modifiers:
      - shift
    - key_code: close_bracket
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false

  # 英語入力 -------------------------------------

  # VB -> ''
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: b
    to:
    - key_code: quote
    - key_code: quote
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # MN -> ""
  - type: basic
    from:
      simultaneous:
      - key_code: m
      - key_code: "n"
    to:
    - key_code: quote
      modifiers:
      - shift
    - key_code: quote
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # UY -> ''
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: "y"
    to:
    - key_code: quote
    - key_code: quote
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # VB -> 〈〉
  - type: basic
    from:
      simultaneous:
      - key_code: v
      - key_code: b
    to:
    - key_code: backslash
    - key_code: open_bracket
    - key_code: backslash
    - key_code: close_bracket
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # MN -> 【】
  - type: basic
    from:
      simultaneous:
      - key_code: m
      - key_code: "n"
    to:
    - key_code: backslash
    - key_code: open_bracket
      modifiers:
      - shift
    - key_code: backslash
    - key_code: close_bracket
      modifiers:
      - shift
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # UY -> 〈〉
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: "y"
    to:
    - key_code: backslash
    - key_code: open_bracket
    - key_code: backslash
    - key_code: close_bracket
    - key_code: left_arrow
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 片手・斜め {{{

  # 英語入力 -------------------------------------

  # RG -> ;
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: g
    to:
    - key_code: semicolon
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # UH -> /
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: h
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # FB -> :
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: b
    to:
    - key_code: semicolon
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # JN -> ?
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: "n"
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # RG -> ・
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: g
    to:
    - key_code: quote
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # UH -> ／
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: h
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # FB -> ！
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: b
    to:
    - key_code: "1"
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # JN -> ？
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: "n"
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}

# 片手・斜め（代替） {{{

  # 英語入力 -------------------------------------

  # RF -> ;
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: f
    to:
    - key_code: semicolon
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # UJ -> /
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: j
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # FV -> :
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: v
    to:
    - key_code: semicolon
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # JM -> ?
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: m
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: en

  # 日本語入力 -----------------------------------

  # RF -> ・
  - type: basic
    from:
      simultaneous:
      - key_code: r
      - key_code: f
    to:
    - key_code: quote
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # UJ -> ／
  - type: basic
    from:
      simultaneous:
      - key_code: u
      - key_code: j
    to:
    - key_code: slash
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # FV -> ！
  - type: basic
    from:
      simultaneous:
      - key_code: f
      - key_code: v
    to:
    - key_code: "1"
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

  # JM -> ？
  - type: basic
    from:
      simultaneous:
      - key_code: j
      - key_code: m
    to:
    - key_code: slash
      modifiers:
      - shift
      repeat: false
    conditions:
    - type: input_source_if
      input_sources:
      - language: ja

# }}}
